::使用notification builder构建
    NotificationCompat.Builder notifyBuilder;
    NotificationManager notificationManager;
    //onCreate后
    notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
    //创建并发起notification的函数
    public void simpleNotification(){
        notifyBuilder = new NotificationCompat.Builder(this)
                .setContentIntent(getDefaultIntent())
                .setContentTitle("New Messages")
                .setContentText("You Received a New Message")
                .setSmallIcon(R.mipmap.ic_launcher)
                .setAutoCancel(true);
        notificationManager.notify(100, notifyBuilder.build());
    }
    

::参考链接
http://www.itnose.net/detail/6169442.html

遇到的坑
1. 从service发起notification时，需要 FLAG_ACTIVITY_NEW_TASK
2. 从service发起notification, PendingIntent要传值时，不能用 FLAG_CANCEL_CURRENT，否则无法传

:: NotificationListenerService ，自 API lvl 18, 也就是 Android 4.3加入的类，
    https://developer.android.com/reference/android/service/notification/NotificationListenerService.html
    A service that receives calls from the system when new notifications are posted or removed, or their ranking changed.
    它是通过系统调起的服务，当有应用发起通知的时候，系统会将通知的动作和信息回调给NotificationListenerService
    
    在继承NotificationListenerService服务实现自己逻辑之前，需要在配置文件中添加如下代码，获取权限
    <service android:name=".NotificationListener"  
         android:label="@string/service_name"  
         android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE">  
        <intent-filter>  
            <action android:name="android.service.notification.NotificationListenerService" />  
        </intent-filter>  
    </service>  
    
   该服务中有以下两个抽象方法，是需要开发者在使用该服务的时候实现的。 
    @Override  
    public void onNotificationPosted(StatusBarNotification sbn) {  }  
    和
    @Override  
    public void onNotificationRemoved(StatusBarNotification sbn) {  }
    
3. Notification icon 在API level 21 以上和以下有区别，21及以上，需要透明背景的icon，用来兼容material design
    如果全level想显示自己的single color icon， 需要gradle 的 targetSDKVersion 设成 21 以下
    
