::动态加载dex文件 https://github.com/richthofen911/Matata

::不安装apk文件直接执行 
http://blog.zhourunsheng.com/2011/09/%E6%8E%A2%E7%A7%98%E8%85%BE%E8%AE%AFandroid%E6%89%8B%E6%9C%BA%E6%B8%B8%E6%88%8F%E5%B9%B3%E5%8F%B0%E4%B9%8B%E4%B8%8D%E5%AE%89%E8%A3%85%E6%B8%B8%E6%88%8Fapk%E7%9B%B4%E6%8E%A5%E5%90%AF%E5%8A%A8%E6%B3%95/
http://www.eoeandroid.com/blog-136532-48562.html
http://wangleyiang.iteye.com/blog/1791947
http://www.cnblogs.com/over140/archive/2012/03/29/2423116.html

::关于动态加载apk
  理论上可以用到的有DexClassLoader、PathClassLoader和URLClassLoader。
  DexClassLoader：可以加载文件系统上的jar、dex、apk
  PathClassLoader：可以加载/data/app目录下的apk，这也意味着，它只能加载已经安装的apk
  URLClassLoader：可以加载java中的jar，但是由于dalvik不能直接识别jar，所以此方法在android中无法使用
  
::关于jar、dex和apk
  dex和apk是可以直接加载的，因为它们都是或者内部有dex文件，而原始的jar是不行的，
  必须转换成dalvik所能识别的字节码文件，转换工具可以使用android sdk中platform-tools目录下的dx
  
::归类总结 ****** https://segmentfault.com/a/1190000004062866
  基本型： 简单的动态加载模式
  进阶型： 代理Activity模式
  黑科技型： 动态创建Activity模式动态创建Activity模式的核心是“运行时字节码操作”，现在宿主注册一个不存在的Activity
            ，启动插件的某个Activity时都把想要启动的Activity替换成前面注册的Activity，从而是后者能正常启动。）
  
  
