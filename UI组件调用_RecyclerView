RecyclerView(特点是可以自动回收用过的cell)
RecyclerView与ListView的原理差不多，本质上都是以适配器为核心。只不过ListView缓存的是view，viewHolder附着在view上，
而RecyclerView缓存的是viewHolder，view包含在viewHolder内

需要
1.ViewHolder    https://github.com/richthofen911/SalesDemo/blob/master/app/src/main/java/ap1/com/demo/ViewHolderMessage.java

2.Adapter       https://github.com/richthofen911/SalesDemo/blob/master/app/src/main/java/ap1/com/demo/AdapterMessages.java

3.主屏幕中声明RecyclerView:
     private RecyclerView recyclerView_messages = (RecyclerView) findViewById(R.id.recyclerview_messages);
     public static AdapterMessages adapterMessages = new AdapterMessages(Dataset);
     LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);
     recyclerView_messages.setLayoutManager(linearLayoutManager);
     recyclerView_messages.setHasFixedSize(true); //fixsize可以提高性能
     recyclerView_messages.setAdapter(adapterMessages);
     
::关于添加和删除item后通知dataset变化的操作(非常重要，不然显示不正常)
     public void addData(int pos, Item newItem){   //pos参数通常就是传dataset.size()，不用-1
        DataStore.items.add(pos, newItem);
        adapterMessages.notifyItemInserted(pos);
        // 加入如下代码保证position的位置正确性
        if (pos != DataStore.items.size() - 1) {
            adapterMessages.notifyItemRangeChanged(pos, DataStore.items.size() - pos);
        }
    }
     
     public void deleteData(int pos){   //这里的pos参数通常来自来自for循环里i
        DataStore.items.remove(pos);
        MainActivity.adapterMessages.notifyItemRemoved(pos);
        // 加入如下代码保证position的位置正确性
        if (pos != DataStore.items.size() - 1) {
            MainActivity.adapterMessages.notifyItemRangeChanged(pos, DataStore.items.size() - pos);
        }
    }
    
::remove all的问题
  方法一： 
     先 int sizeBeforeClear = dataset.size();
     然后 dataset.clear()
     之后  adapter.notifyItemRangeRemoved(0, sizeBeforeClear)
          adapter.notifyItemRangeChanged(0, sizeBeforeClear)
     ***但是，此时会没有动画，recyclerview会定住不动，看起来像没删除一样，因为没有定义remove all的动画
     所以要在更早之前针对recyclerview.setAnimation
    
  方法二：
     逐条删除
     
  方法三： 
     int sizeBeforeClear
     dataset.clear()
     adapter.notifyDatasetChanged()
     这个方法没有动画
     
 ::remove item时
     handler.post()没有问题
     但是handler.postDelayed()这个方法会出现被删除的item浮在顶层的（跟setRecyclable(false)一样）的情况

::自动滚动
     在adapter notifyItemInserted之后
     recyclerview.scrollToPosition(adapterChatMsgList.getItemCount() - 1);
     
:: adapter.setIsRecyclable(false)一般不要用，会造成被删除的items浮在recyclerview上层，去不掉

:: 关于swapAdapter()这个方法的坑：两个Adapter需要是完全一样的类定义，不然会造成cannot cast

:: 关于RecyclerView确没有像ListView一样提供onItemClickListener
    网上搜索了一番有不少解决方案，但是其本质都是通过给每个item添加onClickListener来模仿一个伪onItemClickListener，
    这种为每个item添加点击监听的解决方案不用多想也知道是浪费性能的方法。
    这里尝试像ListView那样使用一个监听解决问题  http://blog.csdn.net/liaoinstan/article/details/51200600
    
:: 关于computingLayout的时候不能notifyItemInserted 
   always! use! a Handler!
   
:: item插入顺序
     默认是从上往下，新item出现在线面
      LinearLayoutManager
          setStackFromEnd=true　是从下往上，新item出现在下面，　
          setReverseLayout＝true　　　也是从下往上，但新item出现在上面
     
     
