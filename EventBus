::Use 'greenrobot:eventbus' as the example  (http://blog.csdn.net/yuanzeyao/article/details/38174537)
  原理--基于Observer Pattern的改动
  EventBus中的观察者通常有四种订阅函数（就是某件事情发生被调用的方法）
  1、onEvent
      如果使用该函数作为订阅函数，那么该事件在哪个线程发布出来的，onEvent就会在这个线程中运行，也就是说发布事件和接收事件
      线程在同一个线程。使用这个方法时，在onEvent方法中不能执行耗时操作，如果执行耗时操作容易导致事件分发延迟。
  2、onEventMainThread
      如果使用该函数作为订阅函数，那么不论事件是在哪个线程中发布出来的，onEventMainThread都会在UI线程中执行，
      接收事件就会在UI线程中运行，这个在Android中是非常有用的，因为在Android中只能在UI线程中跟新UI，所以在
      onEvnetMainThread方法中不能执行耗时操作。
  3、onEventBackground
      如果使用该函数作为订阅函数，那么如果事件是在UI线程中发布出来的，那么onEventBackground就会在子线程中运行，
      如果事件本来就是子线程中发布出来的，那么onEventBackground函数直接在该子线程中执行。
  4、onEventAsync
      如果使用该函数作为订阅函数，那么无论事件在哪个线程发布，都会创建新的子线程在执行。




::My demo link
  https://github.com/richthofen911/DemoEventBus      
      
  
