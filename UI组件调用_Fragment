http://blog.csdn.net/dai_zhenliang/article/details/38554273

::生命周期
  https://developer.android.com/guide/components/fragments.html
  http://blog.csdn.net/lmj623565791/article/details/37970961
  Fragment的生命周期和Activity生命周期之间的关系。在Activity里动态生成Fragment，首先是Activity调用onCreate()方法，
  但是这时候还没有加载到Fragment里的组件，当Fragment调用其onCreateView()方法后，Activity才能得到Fragment中的组件

::构建adapter
  链接: https://github.com/richthofen911/StreetsTO_Release/blob/master/app/src/main/java/com/ap1/streetsto/FragmentTabAdapter.java

::FragmentTransaction和FragmentManager介绍
  http://blog.csdn.net/xyz_lmn/article/details/6927763
  
  FragmentTransaction: 对fragment进行添加,移除,替换,以及执行其他动作
  FragmentManager: 实现管理activity中fragment. 通过调用activity的getFragmentManager()取得它的实例.可以做的事包括
    1、使用findFragmentById() (用于在activity layout中提供一个UI的fragment)或findFragmentByTag()，(适用于有或没有UI的fragment)获取activity中存在的fragment
    2、将fragment从后台堆栈中弹出, 使用 popBackStack() (模拟用户按下BACK 命令).
    3、使用addOnBackStackChangeListener()注册一个监听后台堆栈变化的listener.
    
::调用fragment在调用getActivity()方法时，fragment必须和activity关联（attached to an activity），否则将会返回一个null

::fragment中创建AlertDialog时context参数只要getActivity()就可以，不要getActivity().getApplicationContext()

::fragment 和 activity 交互
  数据交互 http://blog.csdn.net/a910626/article/details/46003635
  activity 调用 fragment中view   getFragmentManager().findFragmentById(id).getView().findViewById(id)
  
  http://www.cnblogs.com/TerryBlog/archive/2012/02/17/2355753.html
  
:: android 3.0 一下用 support.v4.fragment  以上用 app.fragment  

:: 要管理fragment(A)内嵌套的fragment(A1)，要在A中调用getChildFragmentManager而不是getActivity.getFragmentManager.前者是
    A自己的manager，后者是A所隶属的activity的manager。
    而且fragmenttransaction在commit时cannot use ft.commit(), 
      because 'Can not perform this action after onSaveInstanceState'
  
:: fragment考虑尽量用单例

:: 使用newInstance()来实例化fragment
    不要让客户端去调用默认的构造函数，然后手动地设置fragment的参数。而是为它们提供一个静态工厂方法。这样做比调用默认构造方法好，
    它方便别人的调用,保证了fragment的构建过程不会出错。通过提供一个静态工厂方法避免了不小心忘记初始化fragmnet的参数或者没正确设置参数。
    提供静态工厂而不是使用默认构造函数或者自己定义一个有参的构造函数还有至关重要一点:
    fragmnet经常会被销毁重新实例化，Android framework只会调用fragment无参的构造函数。在系统自动实例化fragment的过程中，没有办法干预。
    一些需要外部传入的参数来决定的初始化就没有办法完成。使用静态工厂方法，将外部传入的参数可以通过Fragment.setArgument保存在它自己身上，
    这样我们可以在Fragment.onCreate(...)调用的时候将这些参数取出来。
    
:: fragment的生命周期可能会被打断，尤其是在用viewpager翻页的时候   

:: fragment里没有onBackPressed(), onKeyDown()这些方法，只能在Activity中override，然后findFragment if isVisible
